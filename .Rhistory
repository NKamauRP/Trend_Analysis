library(readr)
Overall_SRI_Scores_Dataset <- read_csv("Overall SRI Scores Dataset.csv")
View(Overall_SRI_Scores_Dataset)
dataset <- read.csv("Trend Analysis/Trend/Overall SRI Scores Dataset.csv")
library(readr)
dataset <- read.csv(Overall_SRI_Scores_Dataset)
library(readr)
dataset <- read_csv("Overall_SRI_Scores_Dataset")
library(readr)
Overall_SRI_Scores_Dataset <- read_csv("Overall SRI Scores Dataset.csv")
View(Overall_SRI_Scores_Dataset)
library(readr)
Overall_SRI_Scores_Dataset <- read_csv("Overall SRI Scores Dataset.csv")
View(Overall_SRI_Scores_Dataset)
# Loading the necessary library
library(readr)
# Loading the dataset
Overall_SRI_Scores_Dataset <- read_csv("Overall SRI Scores Dataset.csv")
# overview of the data
View(Overall_SRI_Scores_Dataset)
# data frame features
str(Overall_SRI_Scores_Dataset)
nrow(Overall_SRI_Scores_Dataset)
ncol(Overall_SRI_Scores_Dataset)
rownames(Overall_SRI_Scores_Dataset)
row.names(Overall_SRI_Scores_Dataset)
colnames(Overall_SRI_Scores_Dataset)
names(Overall_SRI_Scores_Dataset)
typeof(Overall_SRI_Scores_Dataset)
class(Overall_SRI_Scores_Dataset)
attributes(Overall_SRI_Scores_Dataset)
# Confirming data formality from head and tail
head(Overall_SRI_Scores_Dataset)
tail(Overall_SRI_Scores_Dataset)
# Getting info on dataset
?Overall_SRI_Scores_Dataset
# Getting info on dataset
??Overall_SRI_Scores_Dataset
# Getting the dimension in the dataset
dim(Overall_SRI_Scores_Dataset)
# now we perform a summary statistics of the whole dataset using summary
summary(Overall_SRI_Scores_Dataset)
# getting the percentiles
quantile(Overall_SRI_Scores_Dataset$`Count 1`, c(0.75))
# getting the percentiles
quantile(Overall_SRI_Scores_Dataset$`Count 1`)
quantile(Overall_SRI_Scores_Dataset$`Count 2`)
quantile(Overall_SRI_Scores_Dataset$`Count 3`)
quantile(Overall_SRI_Scores_Dataset$`Count 4`)
quantile(Overall_SRI_Scores_Dataset$`Count 5`)
# Getting the standard deviation of the specific columns
sd1 <- sd(Overall_SRI_Scores_Dataset$`Count 1`)
sd2 <- sd(Overall_SRI_Scores_Dataset$`Count 2`)
sd3 <- sd(Overall_SRI_Scores_Dataset$`Count 3`)
sd4 <- sd(Overall_SRI_Scores_Dataset$`Count 4`)
sd5 <- sd(Overall_SRI_Scores_Dataset$`Count 5`)
print("Standard Deviation Count 1 " + sd1)
print("Standard Deviation Count 1 ", sd1)
paste("Standard Deviation Count 1 ", sd1)
paste("Standard Deviation Count 1 equals to ",sd1)
paste("Standard Deviation Count 2 equals to ",sd2)
paste("Standard Deviation Count 3 equals to ",sd3)
paste("Standard Deviation Count 4 equals to ",sd4)
paste("Standard Deviation Count 5 equals to ",sd5)
# geting the mean of the whole dataset
mean(Overall_SRI_Scores_Dataset)
# Calculating the mean for individual count season
mean_count1 <- mean(Overall_SRI_Scores_Dataset$`Count 1`, na.rm = TRUE)
mean_count2 <- mean(Overall_SRI_Scores_Dataset$`Count 2`, na.rm = TRUE)
mean_count3 <- mean(Overall_SRI_Scores_Dataset$`Count 3`, na.rm = TRUE)
mean_count4 <- mean(Overall_SRI_Scores_Dataset$`Count 4`, na.rm = TRUE)
paste("Mean Count 1 equals to ",mean_count1)
paste("Mean Count 2 equals to ",mean_count2)
paste("Mean Count 3 equals to ",mean_count3)
paste("Mean Count 4 equals to ",mean_count4)
paste("Mean Count 5 equals to ",mean_count5)
mean_count5 <- mean(Overall_SRI_Scores_Dataset$`Count 5`, na.rm = TRUE)
paste("Mean Count 5 equals to ",mean_count5)
# getting our normal distribution curve analysis
rnorm_count_1 <- rnorm(n = 79, mean = mean_count1, sd = sd1 )
hist(rnorm_count_1)
# getting our normal distribution curve analysis
rnorm_count_1 <- rnorm(n = 79, mean = mean_count1, sd = sd1 )
hist(rnorm_count_1)
rnorm_count_2 <- rnorm(n = 79, mean = mean_count2, sd = sd2 )
hist(rnorm_count_2)
rnorm_count_3 <- rnorm(n = 79, mean = mean_count3, sd = sd3 )
hist(rnorm_count_3)
rnorm_count_4 <- rnorm(n = 79, mean = mean_count4, sd = sd4 )
hist(rnorm_count_4)
rnorm_count_5 <- rnorm(n = 79, mean = mean_count5, sd = sd5 )
hist(rnorm_count_5)
# now we check what is the mean and standard deviation of the sample values
summary(rnorm_count_1)
sd(rnorm_count_1)
paste("Standard Deviation Count 1 equals to ",sd1)
summary(rnorm_count_5)
sd(rnorm_count_5)
# getting our normal distribution curve analysis for the counts from (1-5)
set.seed(1)
rnorm_count_1 <- rnorm(n = 79, mean = mean_count1, sd = sd1 )
hist(rnorm_count_1)
# now we check what is the mean and standard deviation of the sample values
summary(rnorm_count_1)
sd(rnorm_count_1)
library(moments)
install.packages("moments")
library(moments)
# now we get the skewness(height) and kurtosis(tail width) of our data
#skewness
skewness(rnorm_count_1)
# now we get the skewness(height) and kurtosis(tail width) of our data
#skewness --> a negative skew means distribution is left skewed
skewness(rnorm_count_1)
skewness(rnorm_count_2)
skewness(rnorm_count_3)
skewness(rnorm_count_4)
skewness(rnorm_count_5)
#kurtosis --> value greater mid point indicates more values in tails compared to normal dist
kurtosis(rnorm_count_1)
#kurtosis --> value greater mid point indicates more values in tails compared to normal dist
kurtosis(rnorm_count_1)
kurtosis(rnorm_count_2)
kurtosis(rnorm_count_3)
kurtosis(rnorm_count_4)
kurtosis(rnorm_count_5)
# now we perform Monte Carlo Simulation of the data we replicating the data recurrently
mc_count1 <- replicate(100, mean(rnorm_count_1))
hist(mc_count1)
mc_count2 <- replicate(100, mean(rnorm_count_2))
hist(mc_count2)
library(tidyverse)
# sourcing from Index.r
source("Index.R")
# sourcing from Index.r
source("Index.R")
# Loading the necessary library
library(readr)
library(moments)
library(tidyverse)
# Loading the dataset
Overall_SRI_Scores_Dataset <- read_csv("Overall SRI Scores Dataset.csv")
# overview of the data
View(Overall_SRI_Scores_Dataset)
# data frame features
str(Overall_SRI_Scores_Dataset)
nrow(Overall_SRI_Scores_Dataset)
ncol(Overall_SRI_Scores_Dataset)
rownames(Overall_SRI_Scores_Dataset)
row.names(Overall_SRI_Scores_Dataset)
colnames(Overall_SRI_Scores_Dataset)
names(Overall_SRI_Scores_Dataset)
typeof(Overall_SRI_Scores_Dataset)
class(Overall_SRI_Scores_Dataset)
attributes(Overall_SRI_Scores_Dataset)
# Confirming data formality from head and tail
head(Overall_SRI_Scores_Dataset)
tail(Overall_SRI_Scores_Dataset)
# Getting the dimension in the dataset
dim(Overall_SRI_Scores_Dataset)
# now we perform a summary statistics of the whole dataset using summary
# This gets us the mean, median, quantile, min and max values
summary(Overall_SRI_Scores_Dataset)
# getting the percentiles
quantile(Overall_SRI_Scores_Dataset$`Count 1`)
quantile(Overall_SRI_Scores_Dataset$`Count 2`)
quantile(Overall_SRI_Scores_Dataset$`Count 3`)
quantile(Overall_SRI_Scores_Dataset$`Count 4`)
quantile(Overall_SRI_Scores_Dataset$`Count 5`)
# Getting the standard deviation of the specific columns
sd1 <- sd(Overall_SRI_Scores_Dataset$`Count 1`)
sd2 <- sd(Overall_SRI_Scores_Dataset$`Count 2`)
sd3 <- sd(Overall_SRI_Scores_Dataset$`Count 3`)
sd4 <- sd(Overall_SRI_Scores_Dataset$`Count 4`)
sd5 <- sd(Overall_SRI_Scores_Dataset$`Count 5`)
paste("Standard Deviation Count 1 equals to ",sd1)
paste("Standard Deviation Count 2 equals to ",sd2)
paste("Standard Deviation Count 3 equals to ",sd3)
paste("Standard Deviation Count 4 equals to ",sd4)
paste("Standard Deviation Count 5 equals to ",sd5)
# Calculating the mean for individual count season
mean_count1 <- mean(Overall_SRI_Scores_Dataset$`Count 1`, na.rm = TRUE)
mean_count2 <- mean(Overall_SRI_Scores_Dataset$`Count 2`, na.rm = TRUE)
mean_count3 <- mean(Overall_SRI_Scores_Dataset$`Count 3`, na.rm = TRUE)
mean_count4 <- mean(Overall_SRI_Scores_Dataset$`Count 4`, na.rm = TRUE)
mean_count5 <- mean(Overall_SRI_Scores_Dataset$`Count 5`, na.rm = TRUE)
paste("Mean Count 1 equals to ",mean_count1)
paste("Mean Count 2 equals to ",mean_count2)
paste("Mean Count 3 equals to ",mean_count3)
paste("Mean Count 4 equals to ",mean_count4)
paste("Mean Count 5 equals to ",mean_count5)
# getting our normal distribution curve analysis for the counts from (1-5)
set.seed(1)
rnorm_count_1 <- rnorm(n = 79, mean = mean_count1, sd = sd1 )
hist(rnorm_count_1)
set.seed(1)
rnorm_count_2 <- rnorm(n = 79, mean = mean_count2, sd = sd2 )
hist(rnorm_count_2)
set.seed(1)
rnorm_count_3 <- rnorm(n = 79, mean = mean_count3, sd = sd3 )
hist(rnorm_count_3)
set.seed(1)
rnorm_count_4 <- rnorm(n = 79, mean = mean_count4, sd = sd4 )
hist(rnorm_count_4)
set.seed(1)
rnorm_count_5 <- rnorm(n = 79, mean = mean_count5, sd = sd5 )
hist(rnorm_count_5)
# now we check what is the mean and standard deviation of the sample values
summary(rnorm_count_1)
sd(rnorm_count_1)
summary(rnorm_count_2)
sd(rnorm_count_2)
summary(rnorm_count_3)
sd(rnorm_count_3)
summary(rnorm_count_4)
sd(rnorm_count_4)
summary(rnorm_count_5)
sd(rnorm_count_5)
# now we get the skewness(height) and kurtosis(tail width) of our data
#skewness --> a negative skew means distribution is left skewed
skewness(rnorm_count_1)
skewness(rnorm_count_2)
skewness(rnorm_count_3)
skewness(rnorm_count_4)
skewness(rnorm_count_5)
#kurtosis --> value greater mid point indicates more values in tails compared to normal dist
kurtosis(rnorm_count_1)
kurtosis(rnorm_count_2)
kurtosis(rnorm_count_3)
kurtosis(rnorm_count_4)
kurtosis(rnorm_count_5)
# sourcing from Index.r
source("Index.R")
# the library loading
library(tidyr)
ggplot(Overall_SRI_Scores_Dataset$`Count 1`)
# Data visualization
ggplot(Overall_SRI_Scores_Dataset)
# Data visualization
ggplot(Overall_SRI_Scores_Dataset$`Count 1`)
# Loading the necessary library
library(readr)
library(moments)
library(tidyverse)
# Loading the dataset
Overall_SRI_Scores_Dataset <- read_csv("Overall SRI Scores Dataset.csv")
# overview of the data
View(Overall_SRI_Scores_Dataset)
# data frame features
str(Overall_SRI_Scores_Dataset)
nrow(Overall_SRI_Scores_Dataset)
ncol(Overall_SRI_Scores_Dataset)
rownames(Overall_SRI_Scores_Dataset)
row.names(Overall_SRI_Scores_Dataset)
colnames(Overall_SRI_Scores_Dataset)
names(Overall_SRI_Scores_Dataset)
typeof(Overall_SRI_Scores_Dataset)
class(Overall_SRI_Scores_Dataset)
attributes(Overall_SRI_Scores_Dataset)
# Confirming data formality from head and tail
head(Overall_SRI_Scores_Dataset)
tail(Overall_SRI_Scores_Dataset)
# Getting the dimension in the dataset
dim(Overall_SRI_Scores_Dataset)
# now we perform a summary statistics of the whole dataset using summary
# This gets us the mean, median, quantile, min and max values
summary(Overall_SRI_Scores_Dataset)
# getting the percentiles
quantile(Overall_SRI_Scores_Dataset$`Count 1`)
quantile(Overall_SRI_Scores_Dataset$`Count 2`)
quantile(Overall_SRI_Scores_Dataset$`Count 3`)
quantile(Overall_SRI_Scores_Dataset$`Count 4`)
quantile(Overall_SRI_Scores_Dataset$`Count 5`)
# Getting the standard deviation of the specific columns
sd1 <- sd(Overall_SRI_Scores_Dataset$`Count 1`)
sd2 <- sd(Overall_SRI_Scores_Dataset$`Count 2`)
sd3 <- sd(Overall_SRI_Scores_Dataset$`Count 3`)
sd4 <- sd(Overall_SRI_Scores_Dataset$`Count 4`)
sd5 <- sd(Overall_SRI_Scores_Dataset$`Count 5`)
paste("Standard Deviation Count 1 equals to ",sd1)
paste("Standard Deviation Count 2 equals to ",sd2)
paste("Standard Deviation Count 3 equals to ",sd3)
paste("Standard Deviation Count 4 equals to ",sd4)
paste("Standard Deviation Count 5 equals to ",sd5)
# Calculating the mean for individual count season
mean_count1 <- mean(Overall_SRI_Scores_Dataset$`Count 1`, na.rm = TRUE)
mean_count2 <- mean(Overall_SRI_Scores_Dataset$`Count 2`, na.rm = TRUE)
mean_count3 <- mean(Overall_SRI_Scores_Dataset$`Count 3`, na.rm = TRUE)
mean_count4 <- mean(Overall_SRI_Scores_Dataset$`Count 4`, na.rm = TRUE)
mean_count5 <- mean(Overall_SRI_Scores_Dataset$`Count 5`, na.rm = TRUE)
paste("Mean Count 1 equals to ",mean_count1)
paste("Mean Count 2 equals to ",mean_count2)
paste("Mean Count 3 equals to ",mean_count3)
paste("Mean Count 4 equals to ",mean_count4)
paste("Mean Count 5 equals to ",mean_count5)
# getting our normal distribution curve analysis for the counts from (1-5)
set.seed(1)
rnorm_count_1 <- rnorm(n = 79, mean = mean_count1, sd = sd1 )
hist(rnorm_count_1)
set.seed(1)
rnorm_count_2 <- rnorm(n = 79, mean = mean_count2, sd = sd2 )
hist(rnorm_count_2)
set.seed(1)
rnorm_count_3 <- rnorm(n = 79, mean = mean_count3, sd = sd3 )
hist(rnorm_count_3)
set.seed(1)
rnorm_count_4 <- rnorm(n = 79, mean = mean_count4, sd = sd4 )
hist(rnorm_count_4)
set.seed(1)
rnorm_count_5 <- rnorm(n = 79, mean = mean_count5, sd = sd5 )
hist(rnorm_count_5)
# now we check what is the mean and standard deviation of the sample values
summary(rnorm_count_1)
sd(rnorm_count_1)
# now we get the skewness(height) and kurtosis(tail width) of our data
#skewness --> a negative skew means distribution is left skewed
skewness(rnorm_count_1)
skewness(rnorm_count_2)
skewness(rnorm_count_3)
skewness(rnorm_count_4)
skewness(rnorm_count_5)
#kurtosis --> value greater mid point indicates more values in tails compared to normal dist
kurtosis(rnorm_count_1)
kurtosis(rnorm_count_2)
kurtosis(rnorm_count_3)
kurtosis(rnorm_count_4)
# Data visualization
ggplot(Overall_SRI_Scores_Dataset$`Count 1`)
# Data visualization
ggplot(Overall_SRI_Scores_Dataset)
# bar plot horizontal
barplot(Overall_SRI_Scores_Dataset$`Count 1`,
main = 'Count 1 Overall Score',
xlab = 'fequency', horiz = TRUE)
# box plot
boxplot(Overall_SRI_Scores_Dataset$`Count 4`,
main = "Boxplot Count 4", xlab = "", ylab = "Frequency",
col = "orange", border = "brown",
horizontal = TRUE, notch = TRUE)
# box plot
boxplot(Overall_SRI_Scores_Dataset$`Count 1`,
main = "Boxplot Count 1", xlab = "Frequency", ylab = "",
col = "orange", border = "brown",
horizontal = TRUE, notch = TRUE)
boxplot(Overall_SRI_Scores_Dataset$`Count 2`,
main = "Boxplot Count 2", xlab = "Frequency", ylab = "",
col = "orange", border = "brown",
horizontal = TRUE, notch = TRUE)
boxplot(Overall_SRI_Scores_Dataset$`Count 3`,
main = "Boxplot Count 3", xlab = "Frequency", ylab = "Frequency",
col = "orange", border = "brown",
horizontal = TRUE, notch = TRUE)
boxplot(Overall_SRI_Scores_Dataset$`Count 4`,
main = "Boxplot Count 4", xlab = "", ylab = "Frequency",
col = "orange", border = "brown",
horizontal = TRUE, notch = TRUE)
boxplot(Overall_SRI_Scores_Dataset$`Count 5`,
main = "Boxplot Count 5", xlab = "Frequency", ylab = "",
col = "orange", border = "brown",
horizontal = TRUE, notch = TRUE)
